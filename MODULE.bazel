module(name = "com_google_ortools", version="")

bazel_dep(name = "rules_jvm_external", version = "6.4")
bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "pybind11_bazel", version = "2.12.0")
bazel_dep(name = "rules_python", version = "0.35.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_cc", version = "0.0.10")
bazel_dep(name = "contrib_rules_jvm", version = "0.27.0")
bazel_dep(name = "rules_java", version = "7.11.1")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "swig", version = "4.2.0")
bazel_dep(name = "protobuf", version = "28.2", repo_name = "com_google_protobuf")
bazel_dep(name = "scip", version = "8.1.0")
bazel_dep(name = "abseil-cpp", version = "20240722.0", repo_name = "com_google_absl")
bazel_dep(name = "zlib", version = "1.3.1.bcr.3")
bazel_dep(name = "google_benchmark", version = "1.8.5", repo_name = "com_google_benchmark")
bazel_dep(name = "googletest", version = "1.15.2", repo_name = "com_google_googletest")
bazel_dep(name = "eigen", version = "3.4.0.bcr.1")
bazel_dep(name = "re2", version = "2024-07-02", repo_name = "com_google_re2")
bazel_dep(name = "highs", version = "1.7.0")
bazel_dep(name = "glpk", version = "5.0")
bazel_dep(name = "pybind11_abseil", version = "202402.0", repo_name = "org_pybind11_abseil")
bazel_dep(name = "pybind11_protobuf", version = "0.0.0-20240524-1d7a729")
# -- bazel_dep definitions -- #

# -- use_repo_rule statements -- #

# -- repo definitions -- #

# Get fix from https://github.com/pybind/pybind11_bazel/pull/83
git_override(
    module_name = "pybind11_bazel",
    remote = "https://github.com/pybind/pybind11_bazel.git",
    commit = "0cded485dcedb5659423f9d9fa121357eccdf192",
)

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.12",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "local_pip_deps",
    python_version = "3.12",
    requirements_lock = "//bazel:ortools_requirements.txt",
)

pip.parse(
  hub_name = "ortools_notebook_deps",
  python_version = "3.12",
  requirements_lock = "//bazel:notebook_requirements.txt",
)

use_repo(pip, "ortools_notebook_deps", pip_deps="local_pip_deps")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
JUNIT_PLATFORM_VERSION = "1.9.2"
JUNIT_JUPITER_VERSION = "5.9.2"
maven.install(
    artifacts = [
        "net.java.dev.jna:jna:5.14.0",
        "com.google.truth:truth:0.32",
        "org.junit.platform:junit-platform-launcher:%s" % JUNIT_PLATFORM_VERSION,
        "org.junit.platform:junit-platform-reporting:%s" % JUNIT_PLATFORM_VERSION,
        "org.junit.jupiter:junit-jupiter-api:%s" % JUNIT_JUPITER_VERSION,
        "org.junit.jupiter:junit-jupiter-params:%s" % JUNIT_JUPITER_VERSION,
        "org.junit.jupiter:junit-jupiter-engine:%s" % JUNIT_JUPITER_VERSION,
    ],
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
)
use_repo(maven, "maven")